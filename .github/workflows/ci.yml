name: CI
on:
  push:
  pull_request:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install packages
        run: npm ci

  lint:
    needs: install
    strategy:
      matrix:
        app:
          - shared
          - backend
          - frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0

      - name: Load Node modules
        uses: actions/cache@v3
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install packages
        run: npm --prefix ${{ matrix.app }} ci

      - name: Run lint
        run: npm run --prefix ${{ matrix.app }} lint

  build:
    needs: lint
    strategy:
      matrix:
        app:
          - shared
          - backend
          - frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0

      - name: Load Node modules
        uses: actions/cache@v3
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install packages
        run: npm --prefix ${{ matrix.app }} ci

      - name: Install shared packages for dependents
        if: matrix.app != 'shared'
        run: npm --prefix shared ci

      - name: Compile shared code for dependents
        if: matrix.app != 'shared'
        run: npm run --prefix shared build

      - name: Compile code
        # Shared code will already be compiled for dependent builds
        if: matrix.app != 'shared'
        run: npm run --prefix ${{ matrix.app }} build

  test:
    needs: lint
    strategy:
      matrix:
        app:
          - shared
          - backend
          - frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0

      - name: Load Node modules
        uses: actions/cache@v3
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install packages
        run: npm --prefix ${{ matrix.app }} ci

      - name: Install shared packages for dependents
        if: matrix.app != 'shared'
        run: npm --prefix shared ci

      - name: Compile shared code for dependents
        if: matrix.app != 'shared'
        run: npm run --prefix shared build

      - name: Setup environment
        if: matrix.app == 'backend'
        run: |
          cp ./backend/.env.test ./backend/.env
          npm run on-backend test:setup

      - name: Run tests
        run: npm run --prefix ${{ matrix.app }} test

      - name: Teardown environment
        if: matrix.app == 'backend'
        run: npm run on-backend test:teardown
