{
  "name": "backend",
  "version": "0.0.0",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "pre-commit": "lint-staged",
    "prebuild": "rimraf dist",
    "build": "nest build",
    "dev": "concurrently \"npm run --prefix ../shared dev\" \"nest start --watch | npm run pino-pretty\"",
    "dev:debug": "concurrently \"npm run --prefix ../shared dev\" \"nest start --watch --debug | npm run pino-pretty\"",
    "pino-pretty": "pino-pretty --hideObject -i pid,hostname -t SYS:standard -o '\u001b[33m[{req.id}]\u001b[0m \u001b[32m[{context}]\u001b[0m {msg}'",
    "clean": "rm -rf node_modules && rm -rf build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:prod": "node build/main",
    "lint": "eslint --ext ts,tsx,js,jsx .",
    "lint:fix": "eslint --fix --ext ts,tsx,js,jsx .",
    "test:wait-for": "./wait-for localhost:5432 -- echo \"Database is ready for connections\" && sleep 3;",
    "test:full": "npm run test:setup && npm run test; npm run test:teardown",
    "test:setup": "docker compose -f docker-compose.test.yml up -d && npm run test:wait-for && npx prisma migrate deploy",
    "test": "jest -i",
    "test:teardown": "docker compose -f docker-compose.test.yml down",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "prisma:gen": "npx prisma generate",
    "migration:gen": "npx prisma migrate dev --create-only --name",
    "migration:run": "npx prisma migrate dev",
    "migration:reset": "npx prisma migrate reset"
  },
  "dependencies": {
    "@nestjs/common": "^9.0.0",
    "@nestjs/core": "^9.0.0",
    "@nestjs/jwt": "^9.0.0",
    "@nestjs/passport": "^9.0.0",
    "@nestjs/platform-express": "^9.0.0",
    "@nestjs/platform-socket.io": "^9.0.11",
    "@nestjs/serve-static": "^3.0.0",
    "@nestjs/websockets": "^9.0.11",
    "@prisma/client": "^4.2.1",
    "@types/jsonwebtoken": "^8.5.9",
    "bcrypt": "^5.0.1",
    "convict": "^6.2.3",
    "cookie": "^0.5.0",
    "cookie-parser": "^1.4.6",
    "dotenv": "^16.0.2",
    "jsonwebtoken": "^8.5.1",
    "nanoid": "^3.3.4",
    "nestjs-pino": "^3.1.1",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "pino-http": "^8.2.0",
    "redis": "^4.3.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "socket.io": "^4.5.2",
    "twilio": "^3.81.0",
    "y-socket.io": "^1.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^9.0.0",
    "@nestjs/schematics": "^9.0.0",
    "@nestjs/testing": "^9.0.0",
    "@types/bcrypt": "^5.0.0",
    "@types/convict": "^6.1.1",
    "@types/cookie-parser": "^1.4.3",
    "@types/express": "^4.17.13",
    "@types/jest": "28.1.4",
    "@types/node": "^16.0.0",
    "@types/passport-jwt": "^3.0.6",
    "@types/passport-local": "^1.0.34",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-simple-import-sort": "^7.0.0",
    "jest": "28.1.2",
    "lint-staged": "^13.0.3",
    "pino-pretty": "^9.1.0",
    "prettier": "^2.3.2",
    "prisma": "^4.2.1",
    "source-map-support": "^0.5.20",
    "supertest": "^6.2.4",
    "ts-jest": "28.0.5",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "4.0.0",
    "typescript": "^4.3.5"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "globals": {
      "ts-jest": {
        "isolatedModules": true
      }
    },
    "moduleNameMapper": {
      "~shared/(.*)": "<rootDir>/../../shared/src/$1",
      "src/(.*)": "<rootDir>/$1"
    }
  },
  "lint-staged": {
    "**/*.(js|jsx|ts|tsx)": [
      "prettier --write",
      "eslint --fix"
    ]
  }
}
